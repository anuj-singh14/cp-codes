//call prep() in main() before usage
//to clear the nodes after usage, use delete
int MX = 30;    //number of bits of max value to be inserted

struct trie{
    trie *nxt[2];
    int cnt;
    trie(){
        cnt = 0;
        nxt[0] = nxt[1] = nullptr;
    }
};

trie *head;

void insert(int n){
    trie *curr = head;
    for(int i = MX; i >= 0; i--){
        int ind = (n >> i) & 1;
        if(!curr -> nxt[ind])
            curr -> nxt[ind] = new trie();
        curr = curr -> nxt[ind];
        curr -> cnt++;
    }    
}

void remove(int n){
    trie *curr = head;
    for(int i = MX; i >= 0; i--){
        int ind = (n >> i) & 1;
        curr = curr -> nxt[ind];
        curr -> cnt--;
    }
}

int maxxor(int n){
    trie *curr = head;
    int ans = 0;
    for(int i = MX; i >= 0; i--){
        int ind = (n >> i) & 1;
        if(curr -> nxt[!ind] && curr -> nxt[!ind] -> cnt){
            ans |= 1 << i;
            curr = curr -> nxt[!ind];
        }
        else
            curr = curr -> nxt[ind];
    }
    return ans;
}

int minxor(int n){
    trie *curr = head;
    int ans = 0;
    for(int i = MX; i >= 0; i--){
        int ind = (n >> i) & 1;
        if(curr -> nxt[ind] && curr -> nxt[ind] -> cnt)
            curr = curr -> nxt[ind];
        else{
            ans |= 1 << i;
            curr = curr -> nxt[!ind];
        }
    }
    return ans;
}

void prep(){
    head = new trie();
    insert(0);
}
