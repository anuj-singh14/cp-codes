const int N = 3e5 + 5;

vector<int> adj[N] ;
vector<bool> vis(N, 0) ;
vector<int> low(N, 0), disc(N, 0), par(N, -1) ;
vector<pair<int, int>> bridges;
int t = 0 ;
unordered_set<int> ap ;

void dfs(int x){
    vis[x] = 1 ;
    disc[x] = low[x] = ++t ;
    int c = 0 ; //children
    for(int i : adj[x]){
        if(!vis[i]){
            par[i] = x ;
            ++c ;
            dfs(i) ;
            low[x] = min(low[x], low[i]) ;
            if(par[x] == -1 and c > 1){
                ap.in(x) ;
            }
            if(disc[x] <= low[i] and par[x] != -1){
                ap.in(x) ;
            }
            if(low[i] > disc[x])    bridges.pub({x, i});
        }   else
        if(i != par[x]){
            low[x] = min(low[x], disc[i]) ;
        }
    }
}
