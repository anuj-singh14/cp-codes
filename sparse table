//use only for rmq with no updates
struct sparse{
    #define log asdioasdoajkds

    int N, K;
    vector<int> log;
    vector<vector<int>> st;

    sparse(int n = 5e5){
        init(n);
    }

    void init(int n){
        N = n;
        K = log2(N) + 1;
        a.resize(N + 5);
        log.resize(N + 5);
        st.resize(N + 5, vector<int> (K, 1e15));
    }

    //1-based indexing
    void build(vector<int> &a){
        log[1] = 0;
        for(int i = 2; i <= N; i++)
            log[i] = log[i / 2] + 1;
        for(int i = 1; i <= N; i++) st[i][0] = a[i];
        for(int j = 1; j <= K; j++){
            for(int i = 1; i + (1 << j) <= N + 1; i++){
                st[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);
            }
        }
    }

    int query(int l, int r){
        int j = log[r - l + 1];
        return min(st[l][j], st[r - (1 << j) + 1][j]);
    }
    #undef log
};
