//dijkstra's algo for shortest path
//runs in O((V+E)logV)

#include <bits/stdc++.h>
#define pque priority_queue
#define umap unordered_map
#define uset unordered_set 
#define sz size()
#define bsrch binary_search
#define mst(a,x) memset((a),(x),sizeof(a))
#define pub push_back
#define lob lower_bound
#define upb upper_bound
#define in insert
#define sb __builtin_popcountll
#define adv advance
#define mp make_pair
#define tez ios_base::sync_with_stdio(false) ; cin.tie(NULL) ; cout.tie(NULL) ;
#define prf fixed<<setprecision(10)
#define be begin()
#define en end()
#define fi first
#define se second
#define t() ll t; cin>>t; while(t--)
#define frw(i,a,b) for(ll (i)=(a) ; (i)<(b) ; (i)++)
#define tr(c,i) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++) 
#define bck(i,a,b) for(ll (i)=(a) ; (i)>(b) ; (i)--)
#define all(a) (a).be,(a).en
#define rall(a) (a).rbegin(),(a).rend()
#define inp(a,n) frw(i,0,n){ll j; cin>>j; (a).pub(j);}
#define ite iterator
#define nl cout<<'\n' ;
#define bl cout<<' ' ;
#define INF 1000000000
#define mod 1000000007

using namespace std ;

typedef long double ld ;
typedef long long ll ;
typedef unsigned long long ull ;
typedef vector<ll> vll ;
typedef vector<string> vss ;
typedef pair<ll,ll> pll ;
typedef vector<pair<ll,ll>> vpll ;
typedef map<ll,ll> mll ;
typedef umap<ll,ll> umll ;
typedef set<ll> sll ;
typedef uset<ll> usll ;
typedef multiset<ll> msll ;

int main(){
    tez
    ll n,m ;
    cin>>n>>m ;
    vpll v[n+1] ;
    frw(i,0,m){
        ll x,y,w ;
        cin>>x>>y>>w ;
        v[x].pub({y,w}) ;
    }
    vll dis(n+1,INF) ;
    set<pll> s ;
    dis[1]=0 ;
    s.in({0,1}) ;
    while(s.sz){
        pll p=*s.be ;
        s.erase(s.be) ;
        ll u=p.se ;
        frw(i,0,v[u].sz){
            ll j=v[u][i].fi,w=v[u][i].se ;
            if(dis[j]>dis[u]+w){
                if(dis[j]!=INF)
                    s.erase(s.find({dis[j],j})) ;
                dis[j]=dis[u]+w ;
                s.in({dis[j],j}) ;
            }
        }
    }
    frw(i,2,n+1)    cout<<dis[i],bl
}


