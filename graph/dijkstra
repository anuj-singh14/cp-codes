const int N = 1e5 + 5;
const int INF = 1e9;

vector<vpii> adj(N);
int n, m; 
vi d, p;

void dijkstra(int s) {
    d.assign(n + 1, INF);
    p.assign(n + 1, -1);
    d[s] = 0;
    set<pair<int, int>> q;
    q.insert({0, s});
    while (!q.empty()) {
        int v = q.begin() -> second;
        q.erase(q.begin());
        for (auto edge : adj[v]) {
            int to = edge.first;
            int len = edge.second;
            if (d[v] + len < d[to]) {
                q.erase({d[to], to});
                d[to] = d[v] + len;
                p[to] = v;
                q.insert({d[to], to});
            }
        }
    }
}
