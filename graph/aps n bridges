/*
 *
   Toximoron,
   IIITM Gwalior
 *
 */

#include<bits/stdc++.h>
#define pque priority_queue
#define umap unordered_map
#define uset unordered_set 
#define sz size()
#define bsrch binary_search
#define mem(a,x) memset((a),(x),sizeof(a))
#define pub push_back
#define eb emplace_back
#define lob lower_bound
#define upb upper_bound
#define in insert
#define sb __builtin_popcountll
#define adv advance
#define tez ios_base::sync_with_stdio(false) ; cin.tie(NULL) ; cout.tie(NULL) ;
#define prf fixed<<setprecision(10)
#define be begin()
#define en end()
#define fi first
#define se second
#define endl '\n'
#define min3(a,b,c) min(a,min(b,c))
#define min4(a,b,c,d) min(a,min3(b,c,d))
#define max3(a,b,c) max(a,max(b,c))
#define max4(a,b,c,d) max(a,max3(b,c,d))
#define t() ll t; cin>>t; while(t--)
#define frw(i,a,b) for(ll (i)=(a) ; (i)<(b) ; (i)++)
#define tr(c,i) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++) 
#define bck(i,a,b) for(ll (i)=(a) ; (i)>(b) ; (i)--)
#define all(a) (a).be,(a).en
#define rall(a) (a).rbegin(),(a).rend()
#define inp(a,n) frw(i,0,n){ll j; cin>>j; (a).pub(j);} a.resize(n) ;
#define ite iterator
#define nl cout<<'\n' ;
#define bl cout<<' ' ;
#define INF LONG_LONG_MAX
#define mod 1000000007

using namespace std ;

typedef long double ld ;
typedef long long ll ;
typedef unsigned long long ull ;
typedef vector<ll> vll ;
typedef vector<bool> vb ;
typedef vector<string> vss ;
typedef pair<ll,ll> pll ;
typedef pair<ll,pll> plll ;
typedef vector<pll> vpll ;
typedef map<ll,ll> mll ;
typedef umap<ll,ll> umll ;
typedef set<ll> sll ;
typedef uset<ll> usll ;
typedef multiset<ll> msll ;

vll adj[10] ;
vb vis(10,0) ;
sll ap ;
vll disc(10,0) ;
vll parent(10,-1) ;
vll low(10,0) ;
vpll bridge ;
ll t=0 ;

void func(ll u){
    low[u]=disc[u]=++t ;
    ll ch=0 ;
    vis[u]=1 ;
    frw(i,0,adj[u].sz){
        ll v=adj[u][i] ;
        if(!vis[v]){
            ch++ ;
            parent[v]=u ;
            func(v) ;
            low[u]=min(low[u],low[v]) ;
            if((parent[u]==-1 && ch>1) || (parent[u]!=-1 && low[v]>=disc[u]))
                ap.in(u) ;
            if(low[v]>disc[u])
                bridge.pub({min(u,v),max(u,v)}) ;
        }
        else if(v!=parent[u])
            low[u]=min(low[u],disc[v]) ;
    }
}

int main(){
    tez
    ll n,m ;
    cin>>n>>m ;
    while(m--){
        ll x,y ;
        cin>>x>>y ;
        adj[x].pub(y) ;
        adj[y].pub(x) ;
    }
    frw(i,0,n)
        if(!vis[i])
            func(i) ;
    sort(all(bridge)) ;
    cout<<ap.sz<<endl ;
    tr(ap,i)   cout<<*i<<' ' ;
    nl
    cout<<bridge.sz<<endl ;
    frw(i,0,bridge.sz)    cout<<bridge[i].fi<<' '<<bridge[i].se<<endl ;
}


