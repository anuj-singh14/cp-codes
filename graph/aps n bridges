const ll N = 100;
vvll adj(N) ;
vbool vis(N, 0) ;
vll low(N, 0) ;
vll disc(N, 0) ; 
vll par(N, -1) ;
ll t = 0 ;
uset<ll> ap ;
vpll bridges ;

void dfs(ll x){
    vis[x] = 1 ;
    disc[x] = low[x] = ++t ;
    ll c = 0 ; //children
    for(ll i : adj[x]){
        if(!vis[i]){
            par[i] = x ;
            ++c ;
            dfs(i) ;
            low[x] = min(low[x], low[i]) ;
            if(par[x] == -1 and c > 1){
                ap.in(x) ;
            }
            if(disc[x] <= low[i] and par[x] != -1){
                ap.in(x) ;
            }
            if(low[i] > disc[x]){
                bridges.pub({x, i}) ;
            }
        }   else
        if(i != par[x]){
            low[x] = min(low[x], disc[i]) ;
        }
    }
}
