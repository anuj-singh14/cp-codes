#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector<int>
#define vll vector<ll>
#define vbool vector<bool>
#define umap unordered_map
#define uset unordered_set
#define frw(i, a, b) for(int i = a; i < b; i++)
#define bck(i, a, b) for(int i = a; i > b; i--)
#define fi first
#define se second
#define pow asdihagsiduh
#define pub push_back
#define in insert
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define sz(a) int(a.size())
#define pii pair<int, int>
#define pll pair<ll, ll>
#define plll pair<ll, pll>
#define vpll vector<pll>
#define vpii vector<pii>

#define trace(...) ZZ(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1> 
void ZZ(const char* name, Arg1&& arg1){
	std::cerr << name << " = " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void ZZ(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');
	std::cerr.write(names, comma - names) << " = " << arg1;
	ZZ(comma, args...);
}

const int N = 1e5 + 5;
const int MOD = 1e9 + 7;

int main(){
	ios::sync_with_stdio(0);
	int n, m; cin >> n >> m;
	bool adj[n][n] = {};
	frw(i, 0, m){
	    int x, y; cin >> x >> y;
	    adj[x][y] = adj[y][x] = 1;
	}
	bool dp[n][(1 << n) - 1] = {};
	frw(i, 0, n)    dp[i][1 << i] = 1;
	frw(i, 0, 1 << n){
	    frw(j, 0, n){
	        if(!(i & (1 << j))) continue;
	        frw(k, 0, n){
	            if(j == k or !adj[j][k] or !(i & (1 << k)))    continue;
	            if(dp[k][i ^ (1 << j)]){
	                dp[j][i] = 1;
	                break;
	            }
	        }
	    }
	}
	frw(i, 0, n){
	    if(dp[i][(1 << n) - 1]){
	        cout << "YES";
	        return 0;
	    }
	}
	cout << "NO";
}
