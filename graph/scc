const int N = 1e5 + 5;

vi adj[N], radj[N];
bool vis[N] = {};
stack<int> s;
int n, m; 

void dfs(int x){
	vis[x] = 1;
	for(int i : adj[x]){
		if(!vis[i])
			dfs(i);
	}
	s.push(x);
}

void dfs2(int x){
	vis[x] = 1;
	for(int i : radj[x]){
		if(!vis[i]){
		  dfs2(i);
		}
	}
}

void scc(){
	frw(i, 1, n + 1){
		if(!vis[i]){
			dfs(i);
		}
	}
	memset(vis, 0, sizeof vis);
	while(!s.empty()){
		int x = s.top();
		s.pop();
		int c = 0;
		if(vis[x])	continue;
		vis[x] = 1;
		for(int i : radj[x]){
			if(!vis[i]){
				dfs2(i);
			}
		}
	}
}

void sccAddEdge(int x, int y){
  	adj[x].pub(y);
  	radj[y].pub(x);
}
