const int N = 1e5 + 5;

vi adj[N], radj[N];
bool vis[N] = {};
vector<int> s;
int n, m, grp = 0;
vi comp(N, -1);

void dfs(int x){
    vis[x] = 1;
    for(int i : adj[x]){
        if(!vis[i])
            dfs(i);
    }
    s.pub(x);
}

void dfs2(int x, int val){
    comp[x] = val;
    for(int i : radj[x]){
        if(comp[i] == -1){
            dfs2(i, val);
        }
    }
}

void sccify(){
    frw(i, 1, n + 1){
        if(!vis[i]){
            dfs(i);
        }
    }
    reverse(all(s));
    for(int x : s){
        if(comp[x] != -1)   continue;
        dfs2(x, ++grp);
    }
}

void sccAddEdge(int x, int y){
    adj[x].pub(y);
    radj[y].pub(x);
}
