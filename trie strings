struct trie{
    trie *nxt[26];
    int cnt;
    trie(){
        for(int i = 0; i < 26; i++)   
            nxt[i] = nullptr;
        cnt = 0;
    }
};

trie *head;

void insert(string s){
    trie *curr = head;
    for(auto i: s){
        int ind = i - 'a';
        if(!curr -> nxt[ind])
            curr -> nxt[ind] = new trie();
        curr = curr -> nxt[ind];
        curr -> cnt++;
    }
}

void remove(string s){
    trie *curr = head;
    for(auto i: s){
        int ind = i - 'a';
        curr = curr -> nxt[ind];
        curr -> cnt--;
    }
}

int get(string s){
    trie *curr = head;
    for(auto i : s){
        int ind = i - 'a';
        if(!curr -> nxt[ind])    return -1;
        curr = curr -> nxt[ind];
    }
    return curr -> cnt;
}

void prep(){
    head = new trie();
}
