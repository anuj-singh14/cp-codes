//DP approach
//dp[i] = maximum sum of subarray ending at index i

const int N = 1e5 + 5;
vll dp(N, -1), a(N);

ll rec(int n){
	ll &aux = dp[n];
	if(n == 0)	return aux = -1e15;
	if(aux != -1)	return aux;
	return aux = max(rec(n - 1) + a[n], a[n]);
}

//prefix sum approach

ll max_subarray_sum(vi a){
	ll psum(0), res(-1e18), mn(0);
	for(auto i : a){
		psum += i;
		res = max(res, psum - mn);
		mn = min(mn, psum);
	}
	return res;
}
